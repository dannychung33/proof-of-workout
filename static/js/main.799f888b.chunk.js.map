{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","components/Main.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","ipfsClient","host","port","protocol","Component","componentWillMount","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","BCBC","networks","bcbc","Contract","abi","methods","workoutCount","call","challengeWords","i","workouts","workout","state","sort","a","b","tipAmount","loading","tipWorkoutCreator","id","this","send","from","value","on","hash","validateWorkout","killWorkout","constructor","props","super","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","uploadWorkout","description","title","add","error","bind","className","Navbar","href","rel","width","height","src","Identicon","toString","Main","role","style","maxWidth","onSubmit","workoutDescription","workoutTitle","type","accept","onChange","ref","input","placeholder","required","map","key","creator","maxHeight","controls","name","onClick","validateCounter","killCounter","utils","fromWei","toWei"],"mappings":"4LAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACC,EAAA,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,gB,4zqLEzHbC,G,OADaC,EAAQ,IACdC,CAAW,CAAEC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,WAExE,MAAMd,UAAYe,YAEVC,qBAAsB,IAAD,kIACnB,EAAKC,WADc,uBAEnB,EAAKC,qBAFc,6CAKrBD,WAAY,OAAD,wGACXvB,OAAOyB,SADI,uBAEbzB,OAAO0B,KAAO,IAAIC,IAAK3B,OAAOyB,UAFjB,SAGPzB,OAAOyB,SAASG,SAHT,6BAKN5B,OAAO0B,KACd1B,OAAO0B,KAAO,IAAIC,IAAK3B,OAAO0B,KAAKG,iBAGnC7B,OAAO8B,MAAM,uEATA,6CAaXN,qBAAsB,IAAD,6IACnBE,EAAO1B,OAAO0B,KADK,SAGFA,EAAKK,IAAIC,cAHP,cAGnBC,EAHmB,OAIzB,EAAKC,SAAS,CAAEC,QAASF,EAAS,KAJT,SAMDP,EAAKK,IAAIK,IAAIC,QANZ,UAMnBC,EANmB,QAOLC,EAAKC,SAASF,GAPT,wBAUjBG,EAAO,IAAIf,EAAKK,IAAIW,SAASH,EAAKI,IAAK,8CAC7C,EAAKT,SAAS,CAAEO,SAXO,UAYIA,EAAKG,QAAQC,eAAeC,OAZhC,eAYjBD,EAZiB,OAavB,EAAKX,SAAS,CAAEW,iBAbO,UAeMJ,EAAKG,QAAQG,iBAAiBD,OAfpC,QAejBC,EAfiB,OAgBvB,EAAKb,SAAS,CAAEa,mBAGPC,EAAI,EAnBU,aAmBPA,GAAKH,GAnBE,kCAoBCJ,EAAKG,QAAQK,SAASD,GAAGF,OApB1B,QAoBfI,EApBe,OAqBrB,EAAKhB,SAAS,CACZe,SAAU,IAAI,EAAKE,MAAMF,SAAUC,KAtBhB,QAmBYF,IAnBZ,wBA0BvB,EAAKd,SAAS,CACZe,SAAU,EAAKE,MAAMF,SAASG,KAAK,CAACC,EAAEC,IAAMA,EAAEC,UAAYF,EAAEE,aAE9D,EAAKrB,SAAS,CAAEsB,SAAS,IA7BF,wBA+BvBxD,OAAO8B,MAAM,mDA/BU,8CAkE3B2B,kBAAkBC,EAAIH,GACpBI,KAAKzB,SAAS,CAAEsB,SAAS,IACzBG,KAAKR,MAAMV,KAAKG,QAAQa,kBAAkBC,GAAIE,KAAK,CAAEC,KAAMF,KAAKR,MAAMhB,QAAS2B,MAAOP,IAAaQ,GAAG,kBAAoBC,IACxHL,KAAKzB,SAAS,CAAEsB,SAAS,MAI7BS,gBAAgBP,GACdC,KAAKzB,SAAS,CAAEsB,SAAS,IACzBG,KAAKR,MAAMV,KAAKG,QAAQqB,gBAAgBP,GAAIE,KAAK,CAAEC,KAAMF,KAAKR,MAAMhB,UAAW4B,GAAG,kBAAoBC,IACpGL,KAAKzB,SAAS,CAAEsB,SAAS,MAI7BU,YAAYR,GACVC,KAAKzB,SAAS,CAAEsB,SAAS,IACzBG,KAAKR,MAAMV,KAAKG,QAAQsB,YAAYR,GAAIE,KAAK,CAAEC,KAAMF,KAAKR,MAAMhB,UAAW4B,GAAG,kBAAoBC,IAChGL,KAAKzB,SAAS,CAAEsB,SAAS,MAI7BW,YAAYC,GACVC,MAAMD,GADW,KApDnBE,YAAcC,IAEZA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOC,MAAM,GAC1BC,EAAS,IAAI5E,OAAO6E,WAC1BD,EAAOE,kBAAkBL,GAEzBG,EAAOG,UAAY,KACjBpB,KAAKzB,SAAS,CAAE8C,OAAQC,EAAOL,EAAOM,UACtCC,QAAQC,IAAI,SAAUzB,KAAKR,MAAM6B,UA2ClB,KAvCnBK,cAAgB,CAACC,EAAaC,KAC5BJ,QAAQC,IAAI,8BAGZrE,EAAKyE,IAAI7B,KAAKR,MAAM6B,OAAQ,CAACS,EAAOP,KAClCC,QAAQC,IAAI,cAAeF,GACxBO,EACDN,QAAQM,MAAMA,IAIhB9B,KAAKzB,SAAS,CAAEsB,SAAS,IACzBG,KAAKR,MAAMV,KAAKG,QAAQyC,cAAcH,EAAO,GAAGlB,KAAMuB,EAAOD,GAAa1B,KAAK,CAAEC,KAAMF,KAAKR,MAAMhB,UAAW4B,GAAG,kBAAoBC,IAClIL,KAAKzB,SAAS,CAAEsB,SAAS,UA4B7BG,KAAKR,MAAQ,CACXhB,QAAS,GACTM,KAAM,KACNQ,SAAU,GACVO,SAAS,EACTT,eAAgB,IAGlBY,KAAK0B,cAAgB1B,KAAK0B,cAAcK,KAAK/B,MAC7CA,KAAKF,kBAAoBE,KAAKF,kBAAkBiC,KAAK/B,MACrDA,KAAKW,YAAcX,KAAKW,YAAYoB,KAAK/B,MACzCA,KAAKM,gBAAkBN,KAAKM,gBAAgByB,KAAK/B,MACjDA,KAAKO,YAAcP,KAAKO,YAAYwB,KAAK/B,MAG3CtD,SACE,OACE,6BACE,kBAAC,IAAD,CAAQ8B,QAASwB,KAAKR,MAAMhB,UAC1BwB,KAAKR,MAAMK,QACT,yBAAKE,GAAG,SAASiC,UAAU,oBAAmB,0CAC9C,kBAAC,IAAD,CACE5C,eAAgBY,KAAKR,MAAMJ,eAC3BE,SAAUU,KAAKR,MAAMF,SACrBqB,YAAaX,KAAKW,YAClBe,cAAe1B,KAAK0B,cACpB5B,kBAAmBE,KAAKF,kBACxBQ,gBAAiBN,KAAKM,gBACtBC,YAAaP,KAAKO,cAX1B,wDAoBS5D,Q,yDC9Jf,sCAIA,MAAMsF,UAAevE,YAEnBhB,SACE,OACE,yBAAKsF,UAAU,kEACb,uBACEA,UAAU,sCACVE,KAAK,6CACLnB,OAAO,SACPoB,IAAI,uBAJN,4DAUA,wBAAIH,UAAU,mBACZ,wBAAIA,UAAU,oDACZ,2BAAOA,UAAU,kBACf,2BAAOjC,GAAG,WAAWC,KAAKS,MAAMjC,UAEhCwB,KAAKS,MAAMjC,QACT,yBACAwD,UAAU,OACVI,MAAM,KACNC,OAAO,KACPC,IAAG,gCAA2B,IAAIC,IAAUvC,KAAKS,MAAMjC,QAAS,IAAIgE,cAEpE,mCASDP,O,iCCxCf,oBAGA,MAAMQ,UAAa/E,YAEjBhB,SACE,OACE,yBAAKsF,UAAU,wBACb,yBAAKA,UAAU,OACb,0BAAMU,KAAK,OAAOV,UAAU,4BAA4BW,MAAO,CAAEC,SAAU,UACzE,yBAAKZ,UAAU,2BACb,mCAEA,wBAAIA,UAAU,eAAd,kBACE,6BACChC,KAAKS,MAAMrB,gBACd,6CACA,0BAAMyD,SAAWjC,IACfA,EAAMC,iBACN,IAAMc,EAAc3B,KAAK8C,mBAAmB3C,MACtCyB,EAAQ5B,KAAK+C,aAAa5C,MAChCH,KAAKS,MAAMiB,cAAcC,EAAaC,KAEtC,2BAAOoB,KAAK,OAAOC,OAAO,uBAAuBC,SAAUlD,KAAKS,MAAME,YAAagC,MAAO,CAAEP,MAAO,WAEjG,yBAAKJ,UAAU,sBACf,6BACI,2BACEjC,GAAG,eACHiD,KAAK,OACLG,IAAMC,IAAYpD,KAAK+C,aAAeK,GACtCpB,UAAU,eACVqB,YAAY,mBACZC,UAAQ,IACZ,6BACE,2BACEvD,GAAG,qBACHiD,KAAK,OACLG,IAAMC,IAAYpD,KAAK8C,mBAAqBM,GAC5CpB,UAAU,eACVqB,YAAY,yBACZC,UAAQ,KAEhB,4BAAQN,KAAK,SAAShB,UAAU,oCAAhC,YAEF,mCACEhC,KAAKS,MAAMnB,SAASiE,IAAI,CAAChE,EAASiE,IAEhC,yBAAKxB,UAAU,YAAYwB,IAAKA,GAC9B,yBAAKxB,UAAU,eAOb,2BAAOA,UAAU,cAAczC,EAAQkE,UAEzC,wBAAI1D,GAAG,cAAciC,UAAU,+BAC7B,wBAAIA,UAAU,mBACZ,sCAAYzC,EAAQqC,OACpB,yBAAKI,UAAU,0CAA0CW,MAAO,CAAEe,UAAW,UAC3E,2BACEpB,IAAG,sCAAiC/C,EAAQc,MAC5CsD,UAAQ,KAIZ,2BAAIpE,EAAQoC,cAEd,wBAAI6B,IAAKA,EAAKxB,UAAU,wBACtB,2BAAOA,UAAU,mBAAjB,UAEE,4BACEA,UAAU,2BACV4B,KAAMrE,EAAQQ,GACd8D,QAAUjD,IAERZ,KAAKS,MAAMH,gBAAgBM,EAAMG,OAAO6C,QAL5C,SASGrE,EAAQuE,iBAXb,UAcE,4BACE9B,UAAU,2BACV4B,KAAMrE,EAAQQ,GACd8D,QAAUjD,IAERZ,KAAKS,MAAMF,YAAYK,EAAMG,OAAO6C,QALxC,SASGrE,EAAQwE,cAIb,2BAAO/B,UAAU,gCAAjB,SACS3F,OAAO0B,KAAKiG,MAAMC,QAAQ1E,EAAQK,UAAU4C,WAAY,SADjE,QAGA,4BACER,UAAU,uCACV4B,KAAMrE,EAAQQ,GACd8D,QAAUjD,IACR,IAAIhB,EAAYvD,OAAO0B,KAAKiG,MAAME,MAAM,MAAO,SAC/C1C,QAAQC,IAAIb,EAAMG,OAAO6C,KAAMhE,GAC/BI,KAAKS,MAAMX,kBAAkBc,EAAMG,OAAO6C,KAAMhE,KANpD,wBAwBT6C,O","file":"static/js/main.799f888b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import BCBC from '../abis/BCBC.json'\r\nimport React, { Component } from 'react';\r\n// import Identicon from 'identicon.js';\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\n//Declare IPFS\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = BCBC.networks[networkId]\r\n    if(networkData) {\r\n      // hard coded the deployed to polygon new contract address\r\n      const bcbc = new web3.eth.Contract(BCBC.abi, '0x4C7fd038F14154B9a0C38BC4d53e567317DdB45a')\r\n      this.setState({ bcbc })\r\n      const workoutCount = await bcbc.methods.workoutCount().call()\r\n      this.setState({ workoutCount })\r\n      //load challenge Words!\r\n      const challengeWords = await bcbc.methods.challengeWords().call()\r\n      this.setState({ challengeWords })\r\n\r\n      // Load Videos\r\n      for (var i = 1; i <= workoutCount; i++) {\r\n        const workout = await bcbc.methods.workouts(i).call()\r\n        this.setState({\r\n          workouts: [...this.state.workouts, workout]\r\n        })\r\n      }\r\n      // Sort Workout. Show highest tipped Workout first\r\n      this.setState({\r\n        workouts: this.state.workouts.sort((a,b) => b.tipAmount - a.tipAmount )\r\n      })\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('bcbc contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  captureFile = event => {\r\n\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n  uploadWorkout = (description, title) => {\r\n    console.log(\"Submitting file to ipfs...\")\r\n\r\n    //adding file to the IPFS\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('Ipfs result', result)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n\r\n      this.setState({ loading: true })\r\n      this.state.bcbc.methods.uploadWorkout(result[0].hash, title, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  tipWorkoutCreator(id, tipAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.bcbc.methods.tipWorkoutCreator(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  validateWorkout(id) {\r\n    this.setState({ loading: true })\r\n    this.state.bcbc.methods.validateWorkout(id).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  killWorkout(id) {\r\n    this.setState({ loading: true })\r\n    this.state.bcbc.methods.killWorkout(id).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      bcbc: null,\r\n      workouts: [],\r\n      loading: true,\r\n      challengeWords: \"\"\r\n    }\r\n\r\n    this.uploadWorkout = this.uploadWorkout.bind(this)\r\n    this.tipWorkoutCreator = this.tipWorkoutCreator.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n    this.validateWorkout = this.validateWorkout.bind(this)\r\n    this.killWorkout = this.killWorkout.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              challengeWords={this.state.challengeWords}\r\n              workouts={this.state.workouts}\r\n              captureFile={this.captureFile}\r\n              uploadWorkout={this.uploadWorkout}\r\n              tipWorkoutCreator={this.tipWorkoutCreator}\r\n              validateWorkout={this.validateWorkout}\r\n              killWorkout={this.killWorkout}\r\n            />\r\n        }\r\n        https://github.com/tippi-fifestarr/proof-of-workout\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\n// import photo from '../photo.png'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"https://tippi-fifestarr.github.io/DaVideo/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {/* <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" /> */}\r\n          💪\r\n          Proof-of-Workout: Bl_ckch__n Body Challenge\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n// import Identicon from 'identicon.js';\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n              {/* here is where we get and display words */}\r\n              <h3 className=\"text-center\">challengeWords: \r\n                <br></br>\r\n                {this.props.challengeWords}</h3>\r\n              <h2>Share Workout</h2>\r\n              <form onSubmit={(event) => {\r\n                event.preventDefault()\r\n                const description = this.workoutDescription.value\r\n                const title = this.workoutTitle.value\r\n                this.props.uploadWorkout(description, title)\r\n              }} >\r\n                <input type='file' accept=\".mp4, .mkv .ogg .wmv\" onChange={this.props.captureFile} style={{ width: '250px' }} />\r\n                {/* <input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" onChange={this.props.captureFile} /> */}\r\n                  <div className=\"form-group mr-sm-2\">\r\n                  <br></br>\r\n                      <input\r\n                        id=\"workoutTitle\"\r\n                        type=\"text\"\r\n                        ref={(input) => { this.workoutTitle = input }}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Workout Title...\"\r\n                        required />\r\n                    <br></br>\r\n                      <input\r\n                        id=\"workoutDescription\"\r\n                        type=\"text\"\r\n                        ref={(input) => { this.workoutDescription = input }}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Workout description...\"\r\n                        required />\r\n                  </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Upload!</button>\r\n              </form>\r\n              <p>&nbsp;</p>\r\n              { this.props.workouts.map((workout, key) => {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\">\r\n                      {/* <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(workout.author, 30).toString()}`}\r\n                      /> */}\r\n                      <small className=\"text-muted\">{workout.creator}</small>\r\n                    </div>\r\n                    <ul id=\"workoutList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <h5>title: {workout.title}</h5>\r\n                        <div className=\"embed-responsive embed-responsive-16by9\" style={{ maxHeight: '768px'}}>\r\n                          <video\r\n                            src={`https://ipfs.infura.io/ipfs/${workout.hash}`}\r\n                            controls\r\n                          >\r\n                          </video>\r\n                        </div>\r\n                        <p>{workout.description}</p>\r\n                      </li>\r\n                      <li key={key} className=\"list-group-item py-2\">\r\n                        <small className=\"float-left mt-1\">\r\n                          Approve \r\n                          <button\r\n                            className=\"btn btn-link btn-sm pt-0\"\r\n                            name={workout.id}\r\n                            onClick={(event) => {\r\n                              // send the id of workout to the validateWorkout func\r\n                              this.props.validateWorkout(event.target.name)\r\n                            }}\r\n                          >\r\n                            ✅\r\n                            {workout.validateCounter} \r\n                          </button>\r\n                          Reject: \r\n                          <button\r\n                            className=\"btn btn-link btn-sm pt-0\"\r\n                            name={workout.id}\r\n                            onClick={(event) => {\r\n                              // send the id of workout to the killWorkout func\r\n                              this.props.killWorkout(event.target.name)\r\n                            }}\r\n                          >\r\n                            ❌\r\n                            {workout.killCounter}\r\n                          </button>\r\n                          \r\n                        </small>\r\n                        <small className=\"float-center mt-1 text-muted\">\r\n                          TIPS: {window.web3.utils.fromWei(workout.tipAmount.toString(), 'Ether')} ETH\r\n                        </small>\r\n                        <button\r\n                          className=\"btn btn-link btn-sm float-right pt-0\"\r\n                          name={workout.id}\r\n                          onClick={(event) => {\r\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\r\n                            console.log(event.target.name, tipAmount)\r\n                            this.props.tipWorkoutCreator(event.target.name, tipAmount)\r\n                          }}\r\n                        >\r\n                          TIP 0.1 ETH\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}